{"remainingRequest":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mo7lish/Desktop/MulahAssignment/frontend/src/App.vue?vue&type=style&index=1&id=7ba5bd90&lang=css","dependencies":[{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/src/App.vue","mtime":1731537326489},{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/css-loader/dist/cjs.js","mtime":1731535757418},{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1731535757863},{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/postcss-loader/src/index.js","mtime":1731535757539},{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1731535757144},{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/vue-loader/lib/index.js","mtime":1731535757636}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CnRhYmxlIHsKICB3aWR0aDogNTAlOyAvKiBTZXQgdGhlIHdpZHRoIHRvIDUwJSBvZiB0aGUgY29udGFpbmVyICovCiAgdGV4dC1hbGlnbjogbGVmdDsKICBtYXJnaW46IDIwcHggYXV0bzsgLyogQ2VudGVyIHRoZSB0YWJsZSAqLwogIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IC8qIE9wdGlvbmFsOiB0byBtYWtlIHRoZSB0YWJsZSBib3JkZXJzIGxvb2sgYmV0dGVyICovCn0KCnRoLCB0ZCB7CiAgcGFkZGluZzogOHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7IC8qIE9wdGlvbmFsOiB0byBhZGQgYm9yZGVycyB0byB0aGUgY2VsbHMgKi8KfQoKaDIgewogIHRleHQtYWxpZ246IGNlbnRlcjsgLyogQ2VudGVyIHRoZSB0YWJsZSBoZWFkaW5ncyAqLwp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AA8KA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\">\n      <h1>Table Output & Processing</h1>\n      \n      <h2>Table 1</h2>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th v-for=\"(value, key) in table1[0]\" :key=\"key\">{{ key }}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(row, index) in table1\" :key=\"index\">\n            <td v-for=\"(value, key) in row\" :key=\"key\">{{ value }}</td>\n          </tr>\n        </tbody>\n      </table>\n      \n      <h2>Table 2</h2>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Category</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Alpha</td>\n            <td>{{ table2.Alpha }}</td>\n          </tr>\n          <tr>\n            <td>Beta</td>\n            <td>{{ table2.Beta }}</td>\n          </tr>\n          <tr>\n            <td>Charlie</td>\n            <td>{{ table2.Charlie }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        table1: [],\n        table2: {\n          Alpha: 0,\n          Beta: 0,\n          Charlie: 0\n        },\n      };\n    },\n    mounted() {\n      // Fetch Table 1 data\n      axios.get('http://localhost:3000/table1')\n        .then(response => {\n          this.table1 = response.data;\n          console.log(\"Table 1 Data:\", this.table1); // Debugging statement\n          this.calculateTable2();\n        })\n        .catch(error => {\n          console.error(\"Error fetching Table 1 data:\", error.response ? error.response.data : error.message);\n        });\n    },\n    <template>\n  <div id=\"app\">\n    <h1>Table Output & Processing</h1>\n    \n    <h2>Table 1</h2>\n    <table border=\"1\">\n      <thead>\n        <tr>\n          <th v-for=\"(value, key) in table1[0]\" :key=\"key\">{{ key }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(row, index) in table1\" :key=\"index\">\n          <td v-for=\"(value, key) in row\" :key=\"key\">{{ value }}</td>\n        </tr>\n      </tbody>\n    </table>\n    \n    <h2>Table 2</h2>\n    <table border=\"1\">\n      <thead>\n        <tr>\n          <th>Category</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Alpha</td>\n          <td>{{ table2.Alpha }}</td>\n        </tr>\n        <tr>\n          <td>Beta</td>\n          <td>{{ table2.Beta }}</td>\n        </tr>\n        <tr>\n          <td>Charlie</td>\n          <td>{{ table2.Charlie }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      table1: [],\n      table2: {\n        Alpha: 0,\n        Beta: 0,\n        Charlie: 0\n      },\n    };\n  },\n  mounted() {\n    // Fetch Table 1 data\n    axios.get('http://localhost:3000/table1')\n      .then(response => {\n        this.table1 = response.data;\n        console.log(\"Table 1 Data:\", this.table1); // Debugging statement\n        this.calculateTable2();\n      })\n      .catch(error => {\n        console.error(\"Error fetching Table 1 data:\", error.response ? error.response.data : error.message);\n      });\n  },\n  methods: {\n    calculateTable2() {\n      let alphaSum = 0;\n      let betaSum = 0;\n      let charlieSum = 0;\n\n      // Find the values of A5 and A20\n      const a5Row = this.table1.find(row => row['Index #'] === 'A5');\n      const a20Row = this.table1.find(row => row['Index #'] === 'A20');\n      const a15Row = this.table1.find(row => row['Index #'] === 'A15');\n      const a7Row = this.table1.find(row => row['Index #'] === 'A7');\n      const a13Row = this.table1.find(row => row['Index #'] === 'A13');\n      const a12Row = this.table1.find(row => row['Index #'] === 'A12');\n\n      const a5Value = a5Row ? parseInt(a5Row.Value, 10) : 0;\n      const a20Value = a20Row ? parseInt(a20Row.Value, 10) : 0;\n      const a15Value = a15Row ? parseInt(a15Row.Value, 10) : 0;\n      const a7Value = a7Row ? parseInt(a7Row.Value, 10) : 0;\n      const a13Value = a13Row ? parseInt(a13Row.Value, 10) : 0;\n      const a12Value = a12Row ? parseInt(a12Row.Value, 10) : 0;\n\n      alphaSum = a5Value + a20Value;\n      betaSum = a7Value !== 0 ? Math.floor(a15Value / a7Value) : 0;\n      charlieSum = a13Value * a12Value;\n\n      this.table2.Alpha = alphaSum;\n      this.table2.Beta = betaSum;\n      this.table2.Charlie = charlieSum;\n    }\n  }\n};\n</script>\n\n<style>\ntable {\n  width: 50%; /* Set the width to 50% of the container */\n  text-align: left;\n  margin: 20px auto; /* Center the table */\n  border-collapse: collapse; /* Optional: to make the table borders look better */\n}\n\nth, td {\n  padding: 8px;\n  border: 1px solid #ddd; /* Optional: to add borders to the cells */\n}\n\nh2 {\n  text-align: center; /* Center the table headings */\n}\n</style>\n\n  };\n  </script>\n  \n  <style>\n  table {\n    width: 50%; /* Set the width to 50% of the container */\n    text-align: left;\n    margin: 20px auto; /* Center the table */\n    border-collapse: collapse; /* Optional: to make the table borders look better */\n  }\n  \n  th, td {\n    padding: 8px;\n    border: 1px solid #ddd; /* Optional: to add borders to the cells */\n  }\n  \n  h2 {\n    text-align: center; /* Center the table headings */\n  }\n  </style>\n  "]}]}