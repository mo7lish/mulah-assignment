{"remainingRequest":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mo7lish/Desktop/MulahAssignment/frontend/src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css","dependencies":[{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/src/App.vue","mtime":1731539657940},{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/css-loader/dist/cjs.js","mtime":1731535757418},{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1731535757863},{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/postcss-loader/src/index.js","mtime":1731535757539},{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1731535757144},{"path":"/Users/mo7lish/Desktop/MulahAssignment/frontend/node_modules/vue-loader/lib/index.js","mtime":1731535757636}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50YWJsZS1jb250YWluZXIgewogIHdpZHRoOiA1MCU7CiAgbWFyZ2luOiAyMHB4IGF1dG87IAp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOyAKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AAqHA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <v-app>\n      <div id=\"app\">\n        <h1>Mulah Assignment</h1>\n        <h3>Alshamrani Mohammed</h3>\n        \n        <div class=\"table-container\">\n          <h2>Table 1</h2>\n          <v-data-table\n            :headers=\"table1Headers\"\n            :items=\"table1\"\n            class=\"elevation-1\"\n          ></v-data-table>\n        </div>\n        \n        <div class=\"table-container\">\n          <h2>Table 2</h2>\n          <v-data-table\n            :headers=\"table2Headers\"\n            :items=\"table2Items\"\n            class=\"elevation-1\"\n          ></v-data-table>\n        </div>\n      </div>\n    </v-app>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  import Vue from 'vue';\n  import Vuetify from 'vuetify';\n  import 'vuetify/dist/vuetify.min.css';\n  \n  Vue.use(Vuetify);\n  \n  export default {\n    vuetify: new Vuetify(),\n    data() {\n      return {\n        table1: [],\n        table2: {\n          Alpha: 0,\n          Beta: 0,\n          Charlie: 0\n        },\n        table1Headers: [\n          { text: 'Index #', value: 'Index #' },\n          { text: 'Value', value: 'Value' }\n        ],\n        table2Headers: [\n          { text: 'Category', value: 'Category' },\n          { text: 'Value', value: 'Value' }\n        ]\n      };\n    },\n    computed: {\n      table2Items() {\n        return [\n          { Category: 'Alpha', Value: this.table2.Alpha },\n          { Category: 'Beta', Value: this.table2.Beta },\n          { Category: 'Charlie', Value: this.table2.Charlie }\n        ];\n      }\n    },\n    mounted() {\n      axios.get('http://localhost:3000/table1')\n        .then(response => {\n          this.table1 = response.data;\n          console.log(\"Table 1 Data:\", this.table1); \n          this.calculateTable2();\n        })\n        .catch(error => {\n          console.error(\"Error fetching Table 1 data:\", error.response ? error.response.data : error.message);\n        });\n    },\n    methods: {\n      calculateTable2() {\n        let alphaSum = 0;\n        let betaSum = 0;\n        let charlieSum = 0;\n  \n        const a5Row = this.table1.find(row => row['Index #'] === 'A5');\n        const a20Row = this.table1.find(row => row['Index #'] === 'A20');\n        const a15Row = this.table1.find(row => row['Index #'] === 'A15');\n        const a7Row = this.table1.find(row => row['Index #'] === 'A7');\n        const a13Row = this.table1.find(row => row['Index #'] === 'A13');\n        const a12Row = this.table1.find(row => row['Index #'] === 'A12');\n  \n        const a5Value = a5Row ? parseInt(a5Row.Value, 10) : 0;\n        const a20Value = a20Row ? parseInt(a20Row.Value, 10) : 0;\n        const a15Value = a15Row ? parseInt(a15Row.Value, 10) : 0;\n        const a7Value = a7Row ? parseInt(a7Row.Value, 10) : 0;\n        const a13Value = a13Row ? parseInt(a13Row.Value, 10) : 0;\n        const a12Value = a12Row ? parseInt(a12Row.Value, 10) : 0;\n  \n        alphaSum = a5Value + a20Value;\n        betaSum = a7Value !== 0 ? Math.floor(a15Value / a7Value) : 0;\n        charlieSum = a13Value * a12Value;\n  \n        this.table2.Alpha = alphaSum;\n        this.table2.Beta = betaSum;\n        this.table2.Charlie = charlieSum;\n      }\n    }\n  };\n  </script>\n  \n  <style>\n  .table-container {\n    width: 50%;\n    margin: 20px auto; \n  }\n  \n  h2 {\n    text-align: center; \n  }\n  </style>"]}]}